{"version":3,"sources":["components/Search.js","components/Button.js","components/Header.js","GlobalStyle.js","services/gistService.js","components/GistList.js","components/Gist.js","App.js","index.js"],"names":["Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","InputBox","_templateObject2","Input","input","_templateObject3","Search","_jsx","children","_jsxs","Octicon","name","placeholder","Button","_Fragment","FaSearch","Header","mega","GlobalStyles","createGlobalStyle","octokit","Octokit","GistService","_ref","username","_useState","useState","_useState2","_slicedToArray","gists","setGists","useEffect","fetchGists","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_context","prev","next","listForUser","sent","t0","console","error","stop","apply","arguments","GistList","map","gist","_gist$owner","_gist$owner2","obj","files","filesArray","Object","keys","className","class","src","owner","avatar_url","login","length","comments","moment","created_at","format","updated_at","description","filename","language","forks","public","href","html_url","id","Gist","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"kMAeMA,EAAUC,IAAOC,IAAGC,MAAAC,YAAA,4IASpBC,EAAWJ,IAAOC,IAAGI,MAAAF,YAAA,oEAMrBG,EAAQN,IAAOO,MAAKC,MAAAL,YAAA,mGAUXM,EApCA,WACb,OACEC,cAACX,EAAO,CAAAY,SACNC,eAACR,EAAQ,CAAAO,SAAA,CACTD,cAACG,IAAO,CAACC,KAAK,WACdJ,cAACJ,EAAK,CAACS,YAAY,sCAIzB,E,QCDeC,I,EAAAA,EARf,SAASA,IACP,OACEN,cAAAO,WAAA,CAAAN,SACAC,eAACI,EAAM,CAAAL,SAAA,CAAC,IAACD,cAACQ,IAAQ,IAAG,QAGzB,ECMA,I,MAAMnB,EAAUC,IAAOC,IAAGC,MAAAC,YAAA,gLAWXgB,EArBf,WACE,OACEP,eAACb,EAAO,CAAAY,SAAA,CACND,cAACG,IAAO,CAACC,KAAK,cAAcM,MAAI,IAChCV,cAACD,EAAM,IACPC,cAACM,EAAM,MAGb,ECDeK,EAXMC,YAAiBpB,MAAAC,YAAA,oL,qBCChCoB,EAAU,I,MAAIC,GAsBLC,EApBK,SAAHC,GAAsB,IAAhBC,EAAQD,EAARC,SACrBC,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAgBtB,OAdAI,qBAAU,WACR,IAAMC,EAAU,eAAAC,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEQvB,EAAQS,MAAMe,YAAY,CAAEpB,aAAY,KAAD,EAAxDc,EAAQG,EAAAI,KACNN,EAASD,EAATC,KACRT,EAASS,GAAME,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEfM,QAAQC,MAAM,wBAAuBP,EAAAK,IAAS,yBAAAL,EAAAQ,OAAA,GAAAZ,EAAA,kBAEjD,kBARe,OAAAJ,EAAAiB,MAAA,KAAAC,UAAA,KAUhBnB,GACF,GAAG,CAACR,IAEG,CAAEK,QACX,E,iBC4BMjC,EAAUC,IAAOC,IAAGC,MAAAC,YAAA,6KAUXoD,EAzDE,SAAH7B,GAAmB,IAAbM,EAAKN,EAALM,MAEhB,OACItB,cAACX,EAAO,CAAAY,SACJD,cAAA,MAAAC,SACKqB,EAAMwB,KAAI,SAACC,GAAU,IAADC,EAAAC,EACbC,EAAU,OAAJH,QAAI,IAAJA,OAAI,EAAJA,EAAMI,MACZC,EAAaC,OAAOC,KAAKJ,GAC7B,OACIhD,eAAA,MAAAD,SAAA,CACIC,eAAA,OAAKqD,UAAU,WAAUtD,SAAA,CACrBC,eAAA,OAAKsD,MAAM,OAAMvD,SAAA,CACbD,cAAA,OAAKyD,IAAS,OAAJV,QAAI,IAAJA,GAAW,QAAPC,EAAJD,EAAMW,aAAK,IAAAV,OAAP,EAAJA,EAAaW,aAAc,IAAM,OAAJZ,QAAI,IAAJA,GAAW,QAAPE,EAAJF,EAAMW,aAAK,IAAAT,OAAP,EAAJA,EAAaW,SAExD5D,cAAA,OAAAC,SACAC,eAAA,MAAAD,SAAA,CACID,cAAA,MAAAC,SAAKmD,EAAWS,SAChB7D,cAAA,MAAAC,SAAI,UACJD,cAAA,MAAAC,SAAK8C,EAAKe,WACV9D,cAAA,MAAAC,SAAI,iBAKZC,eAAA,OAAKqD,UAAU,WAAUtD,SAAA,CACrBC,eAAA,QAAAD,SAAA,CAAM,gBAAc8D,IAAOhB,EAAKiB,YAAYC,OAAO,cAAc,OACjE/D,eAAA,QAAAD,SAAA,CAAM,kBAAgB8D,IAAOhB,EAAKmB,YAAYD,OAAO,cAAc,UAEvEjE,cAAA,MAAAC,SAAK8C,EAAKoB,cAEVjE,eAAA,MAAAD,SAAA,CAAe,OAAVmD,QAAU,IAAVA,OAAU,EAAVA,EAAYN,KAAI,SAAAd,GAAI,OAAIhC,cAAA,MAAAC,SAAKiD,EAAIlB,GAAMoC,UAAc,IAAE,OAE3DrB,EAAKsB,UAAYnE,eAAA,KAAAD,SAAA,CAAG,aAAW8C,EAAKsB,YACpCtB,EAAKuB,OAASpE,eAAA,KAAAD,SAAA,CAAG,UAAQ8C,EAAKuB,SAC/BpE,eAAA,KAAAD,SAAA,CAAG,aAAW8C,EAAKe,YACnB5D,eAAA,KAAAD,SAAA,CAAG,UAAQoD,OAAOC,KAAKP,EAAKI,OAAOU,UACnC3D,eAAA,KAAAD,SAAA,CAAG,WAAS8C,EAAKwB,OAAS,MAAQ,QAClCrE,eAAA,KAAAD,SAAA,CAAG,UAAQ8C,EAAKW,MAAME,SACtB1D,eAAA,KAAAD,SAAA,CAAG,QAAKD,cAAA,KAAGwE,KAAMzB,EAAK0B,SAASxE,SAAE8C,EAAK0B,gBA7BjC1B,EAAK2B,GAgCtB,OAIhB,ECpCeC,EATF,WACT,IAEQrD,EAAUP,EAAY,CAAEE,SAFf,gBAETK,MAER,OAAOtB,cAAC6C,EAAQ,CAACvB,MAAOA,GAC1B,ECMIjC,EAAUC,IAAOC,IAAGC,MAAAC,YAAA,mDAKXmF,EAfH,WACV,OACE1E,eAACb,EAAO,CAACkE,UAAU,MAAM,cAAY,MAAKtD,SAAA,CACxCD,cAACS,EAAM,IACPT,cAAC2E,EAAI,IACL3E,cAACW,EAAY,MAGnB,ECVAkE,IAASC,OACP9E,cAAC+E,IAAMC,WAAU,CAAA/E,SACfD,cAAC4E,EAAG,MAENK,SAASC,eAAe,Q","file":"static/js/main.6366fc79.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport Octicon from 'react-octicon'\n\nconst Search = () => {\n  return (\n    <Wrapper>\n      <InputBox>\n      <Octicon name=\"search\" />\n      <Input placeholder=\"Search Gists for the username\"/>\n      </InputBox>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  padding: 8px;\n  background-color: #ffffff;\n  font-size: 14px;\n  line-height: 1.5;\n  border-radius: 6px;\n  margin: 0 16px;\n`;\n\nconst InputBox = styled.div`\n  border-radius: 4px;\n  display: flex;\n  width: 400px;\n`;\n\nconst Input = styled.input`\n  border: none;\n  width: 100%;\n  font-size: 16px;\n\n  &:focus{\n    outline: 0;\n  }\n`;\n\nexport default Search\n","import React from 'react'\n// import styled from 'styled-components'\nimport {FaSearch} from 'react-icons/fa'\n\nfunction Button() {\n  return (\n    <>\n    <Button> <FaSearch /> </Button>\n    </>\n  )\n}\n\nexport default Button\n","import React from 'react'\nimport styled from 'styled-components'\nimport Octicon from 'react-octicon'\nimport Search from './Search';\nimport Button from './Button';\n\nfunction Header() {\n  return (\n    <Wrapper>\n      <Octicon name=\"mark-github\" mega/>\n      <Search />\n      <Button />\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  background-color: #24292e;\n  color: #ffffff;\n  z-index: 32;\n  padding: 16px;\n  font-size: 14px;\n  line-height: 1.5;\n  display: flex;\n  align-items: center;\n`;\n\nexport default Header\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n  body{\n    margin: 0;\n    font-family: Helvetica Neue,Helvetica,Segoe UI,Arial,freesans,sans-serif;\n    color: #626465;\n  }\n  *{\n    box-sizing: border-box;\n  }\n`;\n\nexport default GlobalStyles;\n","import { useState, useEffect } from 'react';\nimport { Octokit } from '@octokit/rest';\n\nconst octokit = new Octokit();\n\nconst GistService = ({ username }) => {\n  const [gists, setGists] = useState([]);\n\n  useEffect(() => {\n    const fetchGists = async () => {\n      try {\n        const response = await octokit.gists.listForUser({ username });\n        const { data } = response;\n        setGists(data);\n      } catch (error) {\n        console.error('Error fetching gists:', error);\n      }\n    };\n\n    fetchGists();\n  }, [username]);\n\n  return { gists };\n};\n\nexport default GistService;","import React from 'react'\nimport styled from 'styled-components'\nimport moment from 'moment'\n\nconst GistList = ({ gists }) => {\n    // console.log(gists)\n    return (\n        <Wrapper>\n            <ul>\n                {gists.map((gist) => {\n                    let obj = gist?.files\n                    let filesArray = Object.keys(obj);\n                    return (\n                        <li key={gist.id}>\n                            <div className='firstBar'>\n                                <div class=\"logo\">\n                                    <img src={gist?.owner?.avatar_url} /> {gist?.owner?.login}\n                                </div>\n                                <div>\n                                <ul>\n                                    <li>{filesArray.length}</li>\n                                    <li>Forks</li>\n                                    <li>{gist.comments}</li>\n                                    <li>Star</li>\n                                    </ul>\n                                </div>\n                            </div>\n\n                            <div className='dateTime'>\n                                <span> Created at: {moment(gist.created_at).format('DD/MM/YYYY')} </span>\n                                <span> Last Updated: {moment(gist.updated_at).format('DD/MM/YYYY')} </span>\n                            </div>\n                            <h2>{gist.description}</h2>\n\n                            <ul>{filesArray?.map(data => <li>{obj[data].filename}</li>)} </ul>\n\n                            {gist.language && <p>Language: {gist.language}</p>}\n                            {gist.forks && <p>Forks: {gist.forks}</p>}\n                            <p>Comments: {gist.comments}</p>\n                            <p>Files: {Object.keys(gist.files).length}</p>\n                            <p>Public: {gist.public ? 'Yes' : 'No'}</p>\n                            <p>Owner: {gist.owner.login}</p>\n                            <p>URL: <a href={gist.html_url}>{gist.html_url}</a></p>\n                        </li>\n                    )\n                })}\n            </ul>\n        </Wrapper>\n    );\n};\n\nconst Wrapper = styled.div`\n    text-align: center;\n    padding: 8px;\n    background-color: #fff\n    font-size: 14px;\n    line-height: 1.5;\n    border-radius: 6px;\n    margin: 0 16px;\n`;\n\nexport default GistList\n","import React from 'react';\nimport GistService from '../services/gistService';\nimport GistList from './GistList';\n\nconst Gist = () => {\n    const username = 'salmanali09'; // Replace with the desired GitHub username\n  \n    const { gists } = GistService({ username });\n  \n    return <GistList gists={gists} />;\n  };\n  \n\nexport default Gist\n","\nimport styled from 'styled-components'\nimport Header from \"./components/Header\";\nimport GlobalStyles from \"./GlobalStyle\";\nimport Gist from './components/Gist';\n\nconst App = () => {\n  return (\n    <Wrapper className=\"App\" data-testid=\"app\">\n      <Header />\n      <Gist />\n      <GlobalStyles />\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  font-size: 14px;\n  line-height: 1.5;\n`;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}